{"version":3,"sources":["webpack:///webpack/bootstrap a0f244be7c3b919f65a5","webpack:///./lib/util.js","webpack:///./lib/surface_to_air.js","webpack:///./lib/board.js","webpack:///./lib/crosshair.js","webpack:///./lib/cannon.js","webpack:///./lib/laser.js","webpack:///./lib/bomb.js","webpack:///./lib/collisions.js","webpack:///./lib/explosion.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;AAGA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;;;AC9BA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH,CAAC;;;;;;;;;;;;;;;AClCD;AACA;AACA;AACA;AACqD;AACrB;AAChC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;;AAGA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;;;AAIA;;;;;;;;AC1HA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACjBwC;;AAExC;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACvCwC;;AAExC;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACtCwC;;;AAGxC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;;;;;AAMA;;AAEA;;;;;;;;AC/CA;;;AAGA;AACA;;AAEA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACvBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a0f244be7c3b919f65a5","export const calcDist = (startPos, endPos) => {\n\n  const dist = Math.sqrt(\n    Math.pow((endPos[0] - startPos[0]),2) +\n    Math.pow((endPos[1] - startPos[1]),2)\n  );\n  return dist;\n};\n\n\nexport const calcUnitVector = (startPos, endPos) => {\n  const vector = [(endPos[0] - startPos[0]), (endPos[1] - startPos[1])];\n  const dist = calcDist(startPos, endPos);\n\n  return [vector[0] / dist, vector[1] / dist];\n};\n\nexport const calcPosDistAway = (startPos, unitVector, dist) => {\n  return [\n    startPos[0] + (dist * unitVector[0]),\n    startPos[1] + (dist * unitVector[1])\n  ];\n};\n\nexport const RandomStartPos = (boardWidth) => (\n  [Math.random() * boardWidth , 0]\n);\n\nexport const RandomEndPos = (boardWidth, boardHeight) => (\n  [Math.random() * boardWidth ,boardHeight]\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 0\n// module chunks = 0","import Board from './board';\n\n\nconst gameWidth = 800;\nconst gameHeight = 500;\nconst windowWidth = Math.max(window.windowWidth, gameWidth);\nconst windowHeight = Math.max(window.windowHeight, gameHeight);\n\n\ndocument.addEventListener(\"DOMContentLoaded\",() => {\n  const canvas = document.getElementById('canvas');\n  canvas.width = gameWidth;\n  canvas.height = gameHeight;\n  const gameBoard = new Board(canvas);\n  const laserShot = new Audio(\"./assets/laser.wav\");\n  laserShot.volume = 0.2;\n  const backgroundMusic = new Audio(\"./assets/background.mp3\");\n  backgroundMusic.play();\n\n\n  gameBoard.render();\n\n  canvas.addEventListener(\"mousemove\", (e) => {\n\n    const coords = [e.offsetX, e.offsetY];\n    gameBoard.crossHair.pos = coords;\n\n  });\n\n  canvas.addEventListener(\"click\", (e) => {\n    gameBoard.addLaser();\n    laserShot.play();\n  });\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/surface_to_air.js\n// module id = 1\n// module chunks = 0","import CrossHair from './crosshair';\nimport Cannon from './cannon';\nimport Laser from './laser';\nimport Bomb from './bomb';\nimport {calcUnitVector, RandomStartPos, RandomEndPos} from './util';\nimport {checkBombLaserCollision} from './collisions';\nimport Explosion from './explosion';\n\nconst BOMB_INTERVAL = 1000;\nconst COLLISION_INTERVAL = 10;\n\n\nclass Board {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.width = canvas.width;\n    this.height = canvas.height;\n    this.crossHair = new CrossHair();\n    this.mainCannon = new Cannon([canvas.width/2, canvas.height]);\n    this.lasers = [];\n    this.bombs = [];\n    this.lasers = [];\n    this.explosions = [];\n    this.render = this.render.bind(this);\n    this.generateBombs();\n    this.checkCollisions();\n    this.explode = new Audio('./assets/explosion.wav');\n    this.explode.volume = 0.4;\n  }\n\n  generateBombs() {\n\n\n    window.setInterval(() => {\n      const newBomb = new Bomb(RandomStartPos(this.width), RandomEndPos(this.width,this.height));\n      this.bombs.push(newBomb);\n    },BOMB_INTERVAL);\n\n  }\n\n  checkCollisions() {\n    window.setInterval(() => {\n      this.checkLaserBombCollisions();\n    }, COLLISION_INTERVAL);\n  }\n\n\n  addLaser() {\n    const newLaser = new Laser(this.mainCannon.endPos, this.crossHair.pos);\n    this.lasers.push(newLaser);\n  }\n\n  render() {\n\n    this.ctx.clearRect(0,0, this.width, this.height);\n    this.crossHair.render(this.ctx);\n    this.renderCannon();\n    this.renderCollection(this.lasers);\n    this.renderCollection(this.bombs);\n    this.renderCollection(this.explosions);\n\n\n\n    window.requestAnimationFrame(() =>\n    this.render(this.width, this.height));\n  }\n\n  renderCannon() {\n    const cannonStart = this.mainCannon.startPos;\n    const crossHairVector = calcUnitVector(cannonStart, this.crossHair.pos);\n    this.mainCannon.calcEndPoint(crossHairVector);\n    this.mainCannon.render(this.ctx);\n  }\n\n  checkLaserBombCollisions() {\n    const lasers = this.lasers;\n    const bombs = this.bombs;\n\n    lasers.forEach((laser) => {\n      bombs.forEach((bomb) => {\n        if(checkBombLaserCollision(laser, bomb)) {\n          this.processLaserBombCollision(laser, bomb);\n        }\n      });\n    });\n  }\n\n  processLaserBombCollision(laser,bomb) {\n    const newExplosion = new Explosion(bomb.startPos);\n    this.explosions.push(newExplosion);\n    window.setTimeout(()=> {\n      const explosionIdx = this.explosions.indexOf(newExplosion);\n      delete this.explosions[explosionIdx];\n    }, 700);\n\n    const laserIdx = this.lasers.indexOf(laser);\n    const bombIdx = this.bombs.indexOf(bomb);\n    delete this.lasers[laserIdx];\n    delete this.bombs[bombIdx];\n    this.explode.play();\n\n\n  }\n\n\n\n  renderCollection(array) {\n    array.forEach((item) => {\n      if (item instanceof Bomb || item instanceof Laser) {\n        item.move();\n      }\n      item.render(this.ctx);\n    });\n  }\n\n}\n\nBoard.BACKGROUND_COLOR = \"#FFFFFF\";\n\n\n\nexport default Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 2\n// module chunks = 0","class CrossHair {\n  constructor() {\n\n    this.pos =  [0,0];\n    this.width = 20;\n    this.height = 20;\n    this.img = new Image();\n    this.img.src = \"./assets/crosshair.png\";\n\n  }\n\n  render(ctx) {\n    ctx.drawImage(this.img, this.pos[0] - (this.width/2) , this.pos[1] - (this.height/2), this.width, this.height);\n  }\n\n}\n\nexport default CrossHair;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/crosshair.js\n// module id = 3\n// module chunks = 0","import {calcUnitVector, calcPosDistAway} from './util.js';\n\nconst CANNON_LENGTH = 50;\nconst CANNON_WIDTH = 15;\nconst CANNON_COLOR = \"#43464B\";\n\n\n\nclass Cannon {\n  constructor(startPos) {\n    this.width = CANNON_WIDTH;\n    this.length = CANNON_LENGTH;\n    this.color = CANNON_COLOR;\n    this.startPos = startPos;\n    this.endPos = [startPos[0], startPos[1] - this.length];\n\n  }\n\n  render(ctx) {\n\n    ctx.beginPath();\n    ctx.moveTo(this.startPos[0], this.startPos[1]);\n    ctx.lineTo(this.endPos[0], this.endPos[1]);\n    ctx.lineWidth = this.width;\n    ctx.strokeStyle = this.color;\n    ctx.stroke();\n    ctx.closePath();\n\n\n    ctx.fillRect(this.startPos[0]-20, this.startPos[1]-10, 40, 10);\n\n  }\n\n  calcEndPoint(unitVector) {\n    this.endPos = calcPosDistAway(this.startPos, unitVector, this.length);\n  }\n\n}\n\nexport default Cannon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/cannon.js\n// module id = 4\n// module chunks = 0","import {calcUnitVector, calcPosDistAway} from './util.js';\n\nconst LASER_LENGTH = 25;\nconst LASER_WIDTH = 3;\nconst LASER_COLOR = \"#ff0101\";\nconst LASER_VEL = 10;\n\n\n\n\nclass Laser {\n  constructor(startPos, endVectorPos) {\n    this.startPos = startPos;\n    this.length = LASER_LENGTH;\n    this.width = LASER_WIDTH;\n    this.color = LASER_COLOR;\n    this.vel = LASER_VEL;\n    this.unitVector = calcUnitVector(startPos, endVectorPos);\n    this.endPos = calcPosDistAway(startPos, this.unitVector, this.length);\n  }\n\n  render(ctx) {\n\n    ctx.beginPath();\n    ctx.moveTo(this.startPos[0], this.startPos[1]);\n    ctx.lineTo(this.endPos[0], this.endPos[1]);\n    ctx.lineWidth = this.width;\n    ctx.strokeStyle = this.color;\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  move() {\n    this.startPos = calcPosDistAway(this.startPos, this.unitVector, this.vel);\n    this.endPos = calcPosDistAway(this.endPos, this.unitVector, this.vel);\n  }\n}\n\nexport default Laser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/laser.js\n// module id = 5\n// module chunks = 0","import {calcUnitVector, calcPosDistAway} from './util';\n\n\nconst BOMB_HEIGHT = 50;\nconst BOMB_WIDTH = 50;\nconst BOMB_MAX_VEL = 2.5;\nconst BOMB_MIN_VEL = 1;\nconst COLLIDABLE_WIDTH_RATIO = .41;\n\n\nclass Bomb {\n  constructor(startVectorPos, endVectorPos) {\n    this.img = new Image();\n    this.img.src = \"./assets/bomb.png\";\n    this.width = BOMB_WIDTH;\n    this.height = BOMB_HEIGHT;\n    this.vel =(Math.random() * (BOMB_MAX_VEL - BOMB_MIN_VEL)) + BOMB_MIN_VEL;\n    this.unitVector = calcUnitVector(startVectorPos, endVectorPos);\n    this.startPos = calcPosDistAway(startVectorPos, this.unitVector, this.height * -1);\n  }\n\n  render(ctx) {\n    // debugger\n    ctx.drawImage(this.img, this.startPos[0], this.startPos[1], this.width, this.height);\n  }\n\n  move() {\n    this.startPos = calcPosDistAway(this.startPos, this.unitVector, this.vel);\n  }\n\n  hitbox() {\n    const xAdjust = ((1 - COLLIDABLE_WIDTH_RATIO) * this.width)/2;\n\n\n    const topLeft = [this.startPos[0] + xAdjust , this.startPos[1]];\n    const bottomRight = [this.startPos[0] + this.width - xAdjust, this.startPos[1] + this.height];\n\n    return [topLeft, bottomRight];\n\n  }\n\n\n\n\n\n}\n\nexport default Bomb;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bomb.js\n// module id = 6\n// module chunks = 0","export const checkBombLaserCollision = (laser, bomb) => {\n\n\n  const startInHitbox = checkPosInHitbox(laser.startPos, bomb.hitbox());\n  const endInHitbox = checkPosInHitbox(laser.endPos, bomb.hitbox());\n\n  return (startInHitbox || endInHitbox);\n\n};\n\nconst checkPosInHitbox = (pos, hitbox) => {\n  const topLeft = hitbox[0];\n  const bottomRight = hitbox[1];\n  const x = pos[0];\n  const y = pos[1];\n  let inBox = false;\n\n  if (x >= topLeft[0] && x <= bottomRight[0]\n    && y >= topLeft[1] && y <= bottomRight[1]) {\n      inBox = true;\n  }\n\n  return inBox;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/collisions.js\n// module id = 7\n// module chunks = 0","const EXPLOSION_WIDTH = 50;\nconst EXPLOSION_HEIGHT = 50;\n\nclass Explosion {\n  constructor(pos) {\n    this.pos = pos;\n    this.width = EXPLOSION_WIDTH;\n    this.height = EXPLOSION_HEIGHT;\n    this.img = new Image();\n    this.img.src = \"./assets/explosion_sprite.png\";\n    this.frame = 0;\n    this.animate();\n  }\n\n  render(ctx) {\n\n    const row = Math.floor(this.frame/4);\n    const col = this.frame % 4;\n    const xSpriteOffset = col * 128;\n    const ySpriteOffset = row * 128;\n    ctx.drawImage(this.img, xSpriteOffset, ySpriteOffset, 128, 128, this.pos[0], this.pos[1], this.width, this.height);\n  }\n\n  animate() {\n    let explode = window.setInterval(() => {\n      this.frame += 1;\n      if (this.frame > 36) {\n\n        window.clearInterval(explode);\n      }\n    },20);\n\n\n  }\n}\n\nexport default Explosion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/explosion.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}